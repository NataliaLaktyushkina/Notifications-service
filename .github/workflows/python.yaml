name: Python application

on:
 push:
    branches: [ main ]
 pull_request:
    branches: [ main ]
 workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["3.8", "3.9"]
    steps:
    - id: checkout
      uses: actions/checkout@v2

    - id: set_up_python
      name: Set up Python ${{matrix.version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.version}}
      continue-on-error: true

    - id: dependencies
      name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wemake-python-styleguide
        pip install flake8-html
        pip install mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      continue-on-error: true

    - id: linter
      name: Lint with styleguide
      if: ${{ always() }}
      run: |
        flake8 . --config=flake8.cfg

        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#      continue-on-error: true

    - id: mypy
      name: Mypy
      if: ${{ always() }}
      run: |
        mypy . --config=mypy.cfg
#      continue-on-error: true

    - name: send telegram message
      id: error_msg
      uses: appleboy/telegram-action@master
      if: ${{ failure() }}
      with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_KEY }}
          message: |
            ${{ github.repository }}: Pipeline for ${{ github.sha }} finished with error!
            if: ${{ steps.set_up_python.outcome.failure }}; then "set_up_python failed"; fi;
            if: ${{ steps.dependencies.outcome.failure }}; then "dependencies failed"; fi;
            if: ${{ steps.linter.outcome.failure }}; then "linter failed"; fi;
            if: ${{ steps.mypy.outcome.failure }}; then "mypy failed"; fi;

            Python v ${{matrix.version}}
            Actor: ${{ github.actor }}.
            Message: ${{ github.event.commits[0].message }}

    - name: send telegram message
      id : successfull_msg
      uses: appleboy/telegram-action@master
      if: ${{ success() }}
      with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_KEY }}
          message: |
            ${{ github.repository }}: Pipeline for ${{ github.sha }} finished successfully

            Python v ${{matrix.version}}
            Actor: ${{ github.actor }}.
            Message: ${{ github.event.commits[0].message }}
